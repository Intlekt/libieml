@word "a.".
@word "b.".
@word "c.".

@node
    en:invariant
    (
        0 #"a."
    ).


@paranode 
	en:paranode0 
	1d:/#/1
	2d:/#/2 
	(
		0 #"a.", 
		1 {#"a.";#"b."}, 
		2 {#"a.";#"b."}
)
.

@paranode 
	en:paranode1
	1d:/#/1
	(
		0 #"a.", 
		1 {#"a.";#"b.";#"c."}
	) .

// sequences singulieres de en:paranode1
@node en:node0 (0 #"a.", 1 #"a.", 2 #"a."). // (0, 0)
@node en:node1 (0 #"a.", 1 #"a.", 2 #"b."). // (0, 1)
@node en:node2 (0 #"a.", 1 #"b.", 2 #"a."). // (1, 0)
@node en:node3 (0 #"a.", 1 #"b.", 2 #"b."). // (1, 1)

@node en:node10 (0 #"a.", 1 #"a.").
@node en:node11 (0 #"a.", 1 #"b.").
@node en:node12 (0 #"a.", 1 #"c.").

// make another paranode for each cells



@paranode 
	en:paranode00
	1d:/#/3
	(
		0 #"a.", 1 #"a.", 2 #"a.",
		3 {#"a.";#"b.";#"c."}
)
.

@paranode 
	en:paranode01
	1d:/#/3
	(
		0 #"a.", 1 #"a.", 2 #"b.",
		3 {#"a.";#"b.";#"c."}
)
.

@paranode 
	en:paranode02
	1d:/#/3
	(
		0 #"a.", 1 #"b.", 2 #"a.",
		3 {#"a.";#"b.";#"c."}
)
.
// no subparanode for node3


@node en:node001 (0 #"a.", 1 #"a.", 2 #"a.", 3 #"a."). 
@node en:node002 (0 #"a.", 1 #"a.", 2 #"a.", 3 #"b.").
@node en:node003 (0 #"a.", 1 #"a.", 2 #"a.", 3 #"c.").

@node en:node010 (0 #"a.", 1 #"a.", 2 #"b.", 3 #"a.").
@node en:node011 (0 #"a.", 1 #"a.", 2 #"b.", 3 #"b.").
@node en:node012 (0 #"a.", 1 #"a.", 2 #"b.", 3 #"c.").

@node en:node020 (0 #"a.", 1 #"b.", 2 #"a.", 3 #"a.").
@node en:node021 (0 #"a.", 1 #"b.", 2 #"a.", 3 #"b.").
@node en:node022 (0 #"a.", 1 #"b.", 2 #"a.", 3 #"c.").


// three table definition with the same invariant
@table
    #invariant -> paranode0
    #node0 -> paranode00
    #node1 -> paranode01
    #node2 -> paranode02
    .

@table
    #invariant -> paranode1
    .

// this one do not expands the node1 and node2 into paranode01 and paranode02
@table
    #invariant -> paranode0
    #node0 -> paranode00
    .




